local wezterm = require('wezterm')
local act = wezterm.action
local mux = wezterm.mux
local bar = wezterm.plugin.require('https://github.com/adriankarlen/bar.wezterm')

config = wezterm.config_builder()
bar.apply_to_config(config) -- 将插件配置注入到主配置中，如果放在末尾，该状态栏就位于末尾
config = {
    -- 设置默认的启动shell
    default_prog = { 'D:/nushell/bin/nu.exe' },
    launch_menu = {
        {
            label = 'nushell',
            args = { 'D:/nushell/bin/nu.exe' },
        },
        {
            label = 'zsh',
            args = { 'D:/Git/Git/bin/bash.exe' },
        },
        {
            label = 'ubuntu',
            args = { 'ubuntu' },
        },
        {
            label = 'pwsh',
            args = { 'powershell.exe', '-NoLogo:' },
        },
        {
            label = 'cmd',
            args = { 'cmd.exe' },
        },
    },

    -- 常规配置
    color_scheme = 'tokyonight',
    use_fancy_tab_bar = false,
    enable_tab_bar = true,
    show_tab_index_in_tab_bar = true,
    hide_tab_bar_if_only_one_tab = false,
    default_cursor_style = 'BlinkingBar',
    inactive_pane_hsb = {
        saturation = 0.9,
        brightness = 0.5,
    },
    font = wezterm.font('JetBrainsMono Nerd Font', { weight = 'Bold' }),
    font_size = 11,

    -- window 设置
    window_decorations = 'RESIZE',
    window_close_confirmation = 'NeverPrompt',
    window_padding = {
        left = 3,
        right = 3,
        top = 0,
        bottom = 0,
    },

    -- 键位设置
    leader = { key = ' ', mods = 'CTRL', timeout_milliseconds = 1000 },
    keys = {
        { key = 'q', mods = 'LEADER', action = act.QuitApplication },

        {
            key = 'e',
            mods = 'SHIFT|CTRL',
            action = act.SplitHorizontal({ domain = 'CurrentPaneDomain' }),
        },
        {
            key = 'o',
            mods = 'SHIFT|CTRL',
            action = act.SplitVertical({ domain = 'CurrentPaneDomain' }),
        },
        { key = 'q', mods = 'CTRL', action = act.CloseCurrentPane({ confirm = false }) },

        { key = 'LeftArrow', mods = 'ALT', action = act.ActivatePaneDirection('Left') },
        { key = 'RightArrow', mods = 'ALT', action = act.ActivatePaneDirection('Right') },
        { key = 'UpArrow', mods = 'ALT', action = act.ActivatePaneDirection('Up') },
        { key = 'DownArrow', mods = 'ALT', action = act.ActivatePaneDirection('Down') },

        -- CTRL + T 创建默认的Tab
        { key = 't', mods = 'CTRL', action = act.SpawnTab('DefaultDomain') },
        -- CTRL + W 关闭当前Tab
        { key = 'w', mods = 'CTRL', action = act.CloseCurrentTab({ confirm = false }) },

        -- CTRL + SHIFT + 1 创建新Tab - WSL
        {
            key = '!',
            mods = 'CTRL|SHIFT',
            action = act.SpawnCommandInNewTab({
                domain = 'DefaultDomain',
                args = { 'D:/Git/Git/bin/bash.exe -l -i' },
            }),
        },
        {
            key = '@',
            mods = 'CTRL|SHIFT',
            action = act.SpawnCommandInNewTab({
                domain = 'DefaultDomain',
                args = { 'ubuntu' },
            }),
        },
        {
            key = '#',
            mods = 'CTRL|SHIFT',
            action = act.SpawnCommandInNewTab({
                domain = 'DefaultDomain',
                args = { 'powershell' },
            }),
        },
        {
            key = '$',
            mods = 'CTRL|SHIFT',
            action = act.SpawnCommandInNewTab({
                args = { 'cmd' },
            }),
        },
    },
    mouse_bindings = {
        -- Open HyperLink
        {
            event = { Up = { streak = 1, button = 'Left' } },
            mods = 'CTRL',
            action = act.OpenLinkAtMouseCursor,
        },
    },
}

for i = 1, 8 do
    -- CTRL + number to activate that tab
    table.insert(config.keys, {
        key = tostring(i),
        mods = 'CTRL',
        action = act.ActivateTab(i - 1),
    })
end

-- -- 屏幕居中
-- wezterm.on("gui-startup", function(window)
--   local screen = wezterm.gui.screens().active
--   if screen.width >= 1920 and screen.height >= 1080 then
--     local width, height = screen.width * 0.89, screen.height * 0.89
--     local tab, pane, window = wezterm.mux.spawn_window {
--       position = {
--         x = (screen.width - width) / 1.1,
--         y = (screen.height - height) / 3.5,
--         origin = 'ActiveScreen'
--       }
--     }
--     -- window:gui_window():maximize()
--     window:gui_window():set_inner_size(width, height)
--   end
-- end)

-- 开启时自动全屏
-- 真·全屏
-- wezterm.on('gui-startup', function(window)
--   local tab, pane, window = mux.spawn_window(cmd or {})
--   local gui_window = window:gui_window();
--   gui_window:perform_action(wezterm.action.ToggleFullScreen, pane)
-- end)
-- 假·全屏
wezterm.on('gui-startup', function(window)
    local tab, pane, window = mux.spawn_window(cmd or {})
    local gui_window = window:gui_window()
    gui_window:maximize()
end)

return config
